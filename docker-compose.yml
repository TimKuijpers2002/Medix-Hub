version: '3.4'

services:
    mssql-patient-server:
        container_name: mssql-patient-server
        image: mcr.microsoft.com/mssql/server:2022-latest
        environment:
            ACCEPT_EULA: "Y"
            MSSQL_SA_PASSWORD: "PatientDbpa55w0rd!"
            MSSQL_PID: "Express"
        ports:
          - "1433:1433"

    mssql-report-server:
        container_name: mssql-report-server
        image: mcr.microsoft.com/mssql/server:2022-latest
        environment:
            ACCEPT_EULA: "Y"
            MSSQL_SA_PASSWORD: "ReportQueryDbpa55w0rd!"
            MSSQL_PID: "Express"
        ports:
          - "1434:1433"
        volumes:
          - mssql-report-data:/var/opt/mssql

    gateway:
        container_name: gateway
        image: timsku2002/gateway:dev
        #build:
          #context: ./Medix-Hub-Gateway
          #dockerfile: Dockerfile
        ports:
          - "8000:8000"

    patientapi:
        container_name: patientapi
        image: timsku2002/patientapi:dev
        #build:
          #context: ./PatientAPI
          #dockerfile: Dockerfile
        ports:
          - "8080:80"
          - "8081:443"
        environment:
          - ASPNETCORE_ENVIRONMENT=Development
          - ASPNETCORE_Kestrel__Certificates__Default__Password=PatientAPICertpa55w0rd!
          - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/PatientAPI.pfx
        volumes:
          - ~/.aspnet/https:/https:ro
        depends_on:
          - mssql-patient-server 

    reportqueryapi:
        container_name: reportqueryapi
        image: timsku2002/reportqueryapi:latest
        #build:
            #context: ./ReportQueryAPI
            #dockerfile: Dockerfile
        ports:
            - "7080:80"
            - "7081:443"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_Kestrel__Certificates__Default__Password=ReportQueryAPICertpa55w0rd!
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/ReportQueryAPI.pfx
        volumes:
            - ~/.aspnet/https:/https:ro
        depends_on:
            - mssql-report-server 

    reportcommandapi:
        container_name: reportcommandapi
        image: timsku2002/reportcommandapi:dev
        #build:
            #context: ./ReportCommandAPI
            #dockerfile: Dockerfile
        ports:
            - "6080:80"
            - "6081:443"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_Kestrel__Certificates__Default__Password=ReportCommandAPICertpa55w0rd!
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/ReportCommandAPI.pfx
        volumes:
            - ~/.aspnet/https:/https:ro

    prometheus:
        image: prom/prometheus:v2.37.9
        container_name: prometheus
        ports:
          - 9090:9090
        command: "--config.file=/etc/prometheus/prometheus.yml"
        volumes:
          - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
          - ./data:/prometheus
        restart: unless-stopped

    grafana:
        image: grafana/grafana-oss:latest
        container_name: grafana
        ports:
          - "3000:3000"
        volumes:
          - grafana-data:/var/lib/grafana
        restart: unless-stopped

volumes:
  mssql-patient-data:
  mssql-report-data:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local